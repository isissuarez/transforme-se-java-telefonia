/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Telefonia.views;

import Telefonia.Controllers.ClienteBean;
import Telefonia.domains.Cliente;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLIntegrityConstraintViolationException;

/**
 *
 * @author DELL
 */
public class JFCliente extends javax.swing.JFrame {

    /**
     * Creates new form JFCliente
     */
    public JFCliente() {
        initComponents();
        listarClientes();
        desativarBotoes();
        jBtnInserir.setEnabled(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBtnGSexo = new javax.swing.ButtonGroup();
        jBtnGEstadoCivil = new javax.swing.ButtonGroup();
        jPnlCliente = new javax.swing.JPanel();
        jLblCodigo = new javax.swing.JLabel();
        jLblNome = new javax.swing.JLabel();
        jLblSexo = new javax.swing.JLabel();
        jTxtCodigo = new javax.swing.JTextField();
        jTxtNome = new javax.swing.JTextField();
        jBtnInserir = new javax.swing.JButton();
        jBtnEditar = new javax.swing.JButton();
        jBtnExcluir = new javax.swing.JButton();
        jBtnCancelar = new javax.swing.JButton();
        jRBtnM = new javax.swing.JRadioButton();
        jRBtnF = new javax.swing.JRadioButton();
        jLblEmail = new javax.swing.JLabel();
        jTxtEmail = new javax.swing.JTextField();
        jLblEstadoCivil = new javax.swing.JLabel();
        jRBtnCasado = new javax.swing.JRadioButton();
        jRBtnSolteiro = new javax.swing.JRadioButton();
        jRBtnDivorciado = new javax.swing.JRadioButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JTblClientes = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPnlCliente.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLblCodigo.setText("CÃ³digo");

        jLblNome.setText("Nome");

        jLblSexo.setText("Sexo");

        jTxtCodigo.setEnabled(false);

        jBtnInserir.setText("Inserir");
        jBtnInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnInserirActionPerformed(evt);
            }
        });

        jBtnEditar.setText("Editar");
        jBtnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnEditarActionPerformed(evt);
            }
        });

        jBtnExcluir.setText("Excluir");
        jBtnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnExcluirActionPerformed(evt);
            }
        });

        jBtnCancelar.setText("Cancelar");
        jBtnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnCancelarActionPerformed(evt);
            }
        });

        jBtnGSexo.add(jRBtnM);
        jRBtnM.setText("M");
        jRBtnM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnMActionPerformed(evt);
            }
        });

        jBtnGSexo.add(jRBtnF);
        jRBtnF.setText("F");
        jRBtnF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRBtnFActionPerformed(evt);
            }
        });

        jLblEmail.setText("E-mail");

        jLblEstadoCivil.setText("Estado Civil");

        jBtnGEstadoCivil.add(jRBtnCasado);
        jRBtnCasado.setText("casado");

        jBtnGEstadoCivil.add(jRBtnSolteiro);
        jRBtnSolteiro.setText("solteiro");

        jBtnGEstadoCivil.add(jRBtnDivorciado);
        jRBtnDivorciado.setText("divorciado");

        javax.swing.GroupLayout jPnlClienteLayout = new javax.swing.GroupLayout(jPnlCliente);
        jPnlCliente.setLayout(jPnlClienteLayout);
        jPnlClienteLayout.setHorizontalGroup(
            jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlClienteLayout.createSequentialGroup()
                .addGap(0, 29, Short.MAX_VALUE)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPnlClienteLayout.createSequentialGroup()
                        .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlClienteLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jBtnInserir, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPnlClienteLayout.createSequentialGroup()
                                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLblEstadoCivil)
                                    .addComponent(jLblSexo))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jBtnEditar, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRBtnCasado)
                            .addComponent(jRBtnM))
                        .addGap(18, 18, 18)
                        .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPnlClienteLayout.createSequentialGroup()
                                .addComponent(jBtnExcluir)
                                .addGap(18, 18, 18)
                                .addComponent(jBtnCancelar))
                            .addGroup(jPnlClienteLayout.createSequentialGroup()
                                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jRBtnSolteiro)
                                    .addComponent(jRBtnF))
                                .addGap(25, 25, 25)
                                .addComponent(jRBtnDivorciado)))
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPnlClienteLayout.createSequentialGroup()
                        .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLblEmail)
                            .addComponent(jLblNome)
                            .addComponent(jLblCodigo))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTxtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(61, 61, 61))))
        );
        jPnlClienteLayout.setVerticalGroup(
            jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlClienteLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTxtCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblCodigo))
                .addGap(18, 18, 18)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblNome)
                    .addComponent(jTxtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblEmail)
                    .addComponent(jTxtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblSexo)
                    .addComponent(jRBtnM)
                    .addComponent(jRBtnF))
                .addGap(18, 18, 18)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLblEstadoCivil)
                    .addComponent(jRBtnCasado)
                    .addComponent(jRBtnSolteiro)
                    .addComponent(jRBtnDivorciado))
                .addGap(18, 18, 18)
                .addGroup(jPnlClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBtnInserir)
                    .addComponent(jBtnEditar)
                    .addComponent(jBtnExcluir)
                    .addComponent(jBtnCancelar))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        JTblClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Nome", "Sexo", "email", "estado civil"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Double.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        JTblClientes.setShowGrid(true);
        JTblClientes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                JTblClientesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(JTblClientes);
        if (JTblClientes.getColumnModel().getColumnCount() > 0) {
            JTblClientes.getColumnModel().getColumn(0).setMinWidth(30);
            JTblClientes.getColumnModel().getColumn(0).setMaxWidth(50);
            JTblClientes.getColumnModel().getColumn(1).setMinWidth(120);
            JTblClientes.getColumnModel().getColumn(1).setMaxWidth(160);
            JTblClientes.getColumnModel().getColumn(2).setMinWidth(30);
            JTblClientes.getColumnModel().getColumn(2).setMaxWidth(50);
            JTblClientes.getColumnModel().getColumn(4).setMinWidth(80);
            JTblClientes.getColumnModel().getColumn(4).setMaxWidth(100);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 517, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPnlCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPnlCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRBtnMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBtnMActionPerformed

    private void jRBtnFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRBtnFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRBtnFActionPerformed

    private void jBtnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnCancelarActionPerformed
        limpar();
    }//GEN-LAST:event_jBtnCancelarActionPerformed

    private void jBtnInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnInserirActionPerformed
        if (jTxtNome.getText().isEmpty() || jTxtEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Os campos nome e e-mail nÃ£o podem ficar vazios", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else if (jBtnGSexo.getSelection() == null || jBtnGEstadoCivil.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Selecione uma opÃ§Ã£o nos campos sexo e estado civil", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else {
            
            char sexo = 0;
            String estadoCivil = null;
            
            if (jRBtnF.isSelected()) {
                sexo = 'F';
            }
            if (jRBtnM.isSelected()) {
                sexo = 'M';
            }
            if (jRBtnCasado.isSelected()) {
                estadoCivil = "Casado";
            }
            if (jRBtnSolteiro.isSelected()) {
                estadoCivil = "solteiro";
            }
            if (jRBtnDivorciado.isSelected()) {
                estadoCivil = "Divorciado";
            }
            
            Cliente cliente = new Cliente(jTxtNome.getText(), sexo, jTxtEmail.getText(), estadoCivil);
            ClienteBean clienteController = new ClienteBean();
            try {
                clienteController.inserirCliente(cliente);
                JOptionPane.showMessageDialog(null, "Registro inserido com sucesso", "InformaÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
            } catch (SQLIntegrityConstraintViolationException e) {
                JOptionPane.showMessageDialog(null, "Registro duplicado", "Erro", JOptionPane.ERROR_MESSAGE);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Outro problema com o banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);;
                ex.printStackTrace();
            }
            limpar();
            listarClientes();
            
        }
    }//GEN-LAST:event_jBtnInserirActionPerformed
    private void jBtnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnExcluirActionPerformed
        
        if (jTxtCodigo.getText().isEmpty()) {
            
            JOptionPane.showMessageDialog(null, "Selecione um cliente para excluir", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else {
            
            char sexo = 0;
            String estadoCivil = null;
            
            if (jRBtnF.isSelected()) {
                sexo = 'F';
            }
            if (jRBtnM.isSelected()) {
                sexo = 'M';
            }
            if (jRBtnCasado.isSelected()) {
                estadoCivil = "Casado";
            }
            if (jRBtnSolteiro.isSelected()) {
                estadoCivil = "solteiro";
            }
            if (jRBtnDivorciado.isSelected()) {
                estadoCivil = "Divorciado";
            }
            
            Cliente cliente = new Cliente(jTxtNome.getText(), sexo, jTxtEmail.getText(), estadoCivil);
            cliente.setId(Integer.parseInt(jTxtCodigo.getText()));
            ClienteBean clienteController = new ClienteBean();
            
            try {
                int confirmacao = JOptionPane.showConfirmDialog(null, "Confirma a exclusÃ£o permanente do registro?", "ConfirmaÃ§Ã£o", JOptionPane.YES_NO_OPTION);
                
                if (confirmacao == JOptionPane.YES_OPTION) {
                    
                    clienteController.excluirCliente(cliente);
                    JOptionPane.showMessageDialog(null, "Registro excluÃ­do com sucesso", "InformaÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
                    limpar();
                    listarClientes();
                } else {
                    JOptionPane.showMessageDialog(null, "ExclusÃ£o cancelada pelo usuÃ¡rio", "InformaÃ§Ã£o", JOptionPane.INFORMATION_MESSAGE);
                    
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Outro problema com o banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);;
                ex.printStackTrace();
            }
            limpar();
            
        }

    }//GEN-LAST:event_jBtnExcluirActionPerformed

    private void jBtnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnEditarActionPerformed
        // TODO add your handling code here:
        if (jTxtNome.getText().isEmpty() || jTxtEmail.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Os campos nome e e-mail nÃ£o podem ficar vazios", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else if (jBtnGSexo.getSelection() == null || jBtnGEstadoCivil.getSelection() == null) {
            JOptionPane.showMessageDialog(null, "Selecione uma opÃ§Ã£o nos campos sexo e estado civil", "AtenÃ§Ã£o", JOptionPane.WARNING_MESSAGE);
        } else {
            
            char sexo = 0;
            String estadoCivil = null;
            
            if (jRBtnF.isSelected()) {
                sexo = 'F';
            }
            if (jRBtnM.isSelected()) {
                sexo = 'M';
            }
            if (jRBtnCasado.isSelected()) {
                estadoCivil = "Casado";
            }
            if (jRBtnSolteiro.isSelected()) {
                estadoCivil = "solteiro";
            }
            if (jRBtnDivorciado.isSelected()) {
                estadoCivil = "Divorciado";
            }
            
            Cliente cliente = new Cliente(jTxtNome.getText(), sexo, jTxtEmail.getText(), estadoCivil);
            cliente.setId(Integer.parseInt(jTxtCodigo.getText()));
            ClienteBean clienteBean = new ClienteBean();
            try {
                clienteBean.editarCliente(cliente);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Outro problema com o banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);;
                ex.printStackTrace();
            }
            limpar();
            listarClientes();
            
        }
    }//GEN-LAST:event_jBtnEditarActionPerformed

    private void JTblClientesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JTblClientesMouseClicked
        // TODO add your handling code here:
        jTxtCodigo.setText(String.valueOf(JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 0)));
        jTxtNome.setText(String.valueOf(JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 1)));
        jTxtEmail.setText(String.valueOf(JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 3)));
        
        if (JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 2).equals('M')) {
            jRBtnM.setSelected(true);
        }
        if (JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 2).equals('F')) {
            jRBtnF.setSelected(true);
        }
        if (JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 4).equals("casado")) {
            jRBtnCasado.setSelected(true);
        }
        if (JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 4).equals("solteiro")) {
            jRBtnSolteiro.setSelected(true);
        }
        if (JTblClientes.getValueAt(JTblClientes.getSelectedRow(), 4).equals("divorciado")) {
            jRBtnDivorciado.setSelected(true);
        }
        ativarBotoes();
        jBtnInserir.setEnabled(false);

    }//GEN-LAST:event_JTblClientesMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new JFCliente().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable JTblClientes;
    private javax.swing.JButton jBtnCancelar;
    private javax.swing.JButton jBtnEditar;
    private javax.swing.JButton jBtnExcluir;
    private javax.swing.ButtonGroup jBtnGEstadoCivil;
    private javax.swing.ButtonGroup jBtnGSexo;
    private javax.swing.JButton jBtnInserir;
    private javax.swing.JLabel jLblCodigo;
    private javax.swing.JLabel jLblEmail;
    private javax.swing.JLabel jLblEstadoCivil;
    private javax.swing.JLabel jLblNome;
    private javax.swing.JLabel jLblSexo;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPnlCliente;
    private javax.swing.JRadioButton jRBtnCasado;
    private javax.swing.JRadioButton jRBtnDivorciado;
    private javax.swing.JRadioButton jRBtnF;
    private javax.swing.JRadioButton jRBtnM;
    private javax.swing.JRadioButton jRBtnSolteiro;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTxtCodigo;
    private javax.swing.JTextField jTxtEmail;
    private javax.swing.JTextField jTxtNome;
    // End of variables declaration//GEN-END:variables

    public void limpar() {
        
        jTxtCodigo.setText(" ");
        jTxtNome.setText("");
        jTxtEmail.setText("");
        jBtnGSexo.clearSelection();
        jBtnGEstadoCivil.clearSelection();
        desativarBotoes();
        jBtnInserir.setEnabled(true);
    }

    public void desativarBotoes() {
        jBtnInserir.setEnabled(false);
        jBtnEditar.setEnabled(false);
        jBtnExcluir.setEnabled(false);
        jBtnCancelar.setEnabled(false);
    }
     public void ativarBotoes() {
        jBtnInserir.setEnabled(true);
        jBtnEditar.setEnabled(true);
        jBtnExcluir.setEnabled(true);
        jBtnCancelar.setEnabled(true);
    }
    
    private void listarClientes() {
        List<Cliente> clientes = new ArrayList<>();
        ClienteBean clienteBean = new ClienteBean();
        
        try {
            clientes = clienteBean.listarclientes();
            
            DefaultTableModel modeloTabela = (DefaultTableModel) JTblClientes.getModel();
            modeloTabela.setRowCount(0);
            
            for (Cliente cliente : clientes) {
                Object[] linha = new Object[]{cliente.getId(), cliente.getNome(), cliente.getSexo(), cliente.getEmail(), cliente.getEstadoCivil()};
                modeloTabela.addRow(linha);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Outro problema com o banco de dados", "Erro", JOptionPane.ERROR_MESSAGE);;
            ex.printStackTrace();
        }
    }
    
}
